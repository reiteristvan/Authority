@using Authority.Services.Dto
@model ProductDto

@{
    ViewBag.Title = "Details";
}

<script type="text/javascript">
    function togglePublish(productId) {
        var requestUrl = '/products/publish/' + productId;

        $.ajax({
            method: 'PUT',
            url: requestUrl
        }).done(function(response) {
            var publishButtonStyle = 'btn btn-' + (response === 'True' ? 'danger' : 'success');
            var $publishButton = $('#publishButton');
            $publishButton.removeClass();
            $publishButton.addClass(publishButtonStyle);
        });
    };

    function getApiKey() {
        var requestUrl = '/products/apikey/' + '@Model.Id';

        $.ajax({
            method: 'GET',
            url: requestUrl
        }).done(function(response) {
            $('#apiKey').val(response);
        });
    };

    function createPolicy() {
        var requestUrl = '/products/' + '@Model.Id' + '/policies';
        var name = $('#newPolicyName').val();
        var model = { Name: name };

        $.ajax({
            method: 'POST',
            url: requestUrl,
            data: model,
            dataType: 'json'
        }).done(function() {
            window.location.reload();
        });
    };

    function deletePolicy(policyId) {
        
    }
</script>

<style>
    .policyList li {
        display: inline-block;
        padding: 1px;
    }
</style>

<div class="container-fluid">
    <p>
        @Html.ActionLink("Back to List", "Index")
    </p>

    <h2>@Model.Name</h2>

    <dl class="dl-horizontal">
        <dt>
            @Html.DisplayNameFor(model => model.Name)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.Name)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.Site)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.Site)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.NotificationEmail)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.NotificationEmail)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.ActivationUrl)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.ActivationUrl)<label>/{activationCode}</label>
        </dd>

        <dt>
            Api Key
        </dt>
        <dd>
            <input id="apiKey" value=""/>
            <button class="btn btn-warning" onclick="getApiKey();">Get Api Key</button>
        </dd>
    </dl>

    <hr/>

    <h4>Policies</h4>

    <h6>New</h6>
    <div>
        <input id="newPolicyName" value=""/>
        <button class="btn btn-default" onclick="createPolicy();">Create</button>
    </div>

    <div class="container-fluid policyList">
        <ul>
            @foreach (PolicyDto policy in Model.Policies)
            {
                <li>
                    <div class="container-fluid">
                        @policy.Name<br />
                        <button class="btn btn-danger" onclick="deletePolicy('@policy.Id');">Delete</button><br />
                        <button class="btn btn-success">Edit</button><br />
                    </div>
                </li>
            }
        </ul>
    </div>

    <hr/>

    <div>
        @{
            string style = "btn btn-" + (Model.IsPublic ? "danger" : "success");
            <button id="publishButton" class="@style" onclick="togglePublish('@Model.Id');">Publish</button>
        }
    </div>
</div>
